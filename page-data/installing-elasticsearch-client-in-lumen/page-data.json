{"componentChunkName":"component---src-templates-blog-post-js","path":"/installing-elasticsearch-client-in-lumen/","result":{"data":{"site":{"siteMetadata":{"title":"Malik"}},"markdownRemark":{"id":"7d0b071f-ee65-5f64-a78a-613934531637","excerpt":"Today, we will do : Installing elasticsearch Create elasticsearch builder Use the builder to get data from elasticsearch Installing elasticsearch In lumen…","html":"<p>Today, we will do :</p>\n<ul>\n<li>Installing elasticsearch</li>\n<li>Create elasticsearch builder</li>\n<li>Use the builder to get data from elasticsearch</li>\n</ul>\n<h3>Installing elasticsearch</h3>\n<p>In lumen project, install elasticsearch via composer</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">composer require elasticsearch/elasticsearch</code></pre></div>\n<h3>Create elasticsearch builder</h3>\n<p>We can create a new class, and we can put it in <code class=\"language-text\">app/Helper</code>. And named it <code class=\"language-text\">Elasticsearch</code> class. If you don’t want to put it in Helper dir, you can move it as you want.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Helpers</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Elasticsearch</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>Then, crete property called <code class=\"language-text\">$elasticsearchClient</code></p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">public</span> <span class=\"token variable\">$elasticsearchClient</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>We can add constructor method</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$host</span>     <span class=\"token operator\">=</span> <span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'ELASTICSEARCH_HOSTS'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'localhost:9200'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$username</span> <span class=\"token operator\">=</span> <span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'ELASTICSEARCH_BASIC_AUTH_USERNAME'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$password</span> <span class=\"token operator\">=</span> <span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'ELASTICSEARCH_BASIC_AUTH_PASSWORD'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">elasticsearchClient</span> <span class=\"token operator\">=</span> ClientBuilder<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setBasicAuthentication</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setHosts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'host'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token variable\">$host</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>Don’t forget to import ClientBuilder</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Elasticsearch<span class=\"token punctuation\">\\</span>ClientBuilder</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>Then add new key in <code class=\"language-text\">.env</code> file</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ELASTICSEARCH_HOSTS=localhost:9200\nELASTICSEARCH_BASIC_AUTH_USERNAME=your-elasticsearch-auth-username\nELASTICSEARCH_BASIC_AUTH_PASSWORD=your-elasticsearch-auth-password</code></pre></div>\n<p>Complete file will be like this</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Helpers</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Elasticsearch<span class=\"token punctuation\">\\</span>ClientBuilder</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Elasticsearch</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$elasticsearchClient</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$host</span>        <span class=\"token operator\">=</span> <span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'ELASTICSEARCH_HOSTS'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'localhost:9200'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$username</span>    <span class=\"token operator\">=</span> <span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'ELASTICSEARCH_BASIC_AUTH_USERNAME'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$password</span>    <span class=\"token operator\">=</span> <span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'ELASTICSEARCH_BASIC_AUTH_PASSWORD'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">elasticsearchClient</span> <span class=\"token operator\">=</span> ClientBuilder<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setBasicAuthentication</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setHosts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'host'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token variable\">$host</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<h3>Use the builder to get data from elasticsearch</h3>\n<p>Okay, elasticsearch has been installed and we already have the builder class. Then how to use it ?</p>\n<p>First, create controller in <code class=\"language-text\">app/Http/Controllers</code>. Let’s called it <code class=\"language-text\">ElasticsearchController</code>. </p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Controllers</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ElasticsearchController</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Controller</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>Within index method, we can call elasticsearch builder.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Helpers<span class=\"token punctuation\">\\</span>Elasticsearch</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$params</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token single-quoted-string string\">'index'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token single-quoted-string string\">'yourindexname'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token single-quoted-string string\">'body'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>\n            <span class=\"token single-quoted-string string\">'size'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">0</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token variable\">$elasticsearch</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Elasticsearch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">elasticsearchClient</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$esResult</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$elasticsearch</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$params</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$esResult</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>Complete file will be like this</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Controllers</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Helpers<span class=\"token punctuation\">\\</span>Elasticsearch</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ElasticsearchController</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Controller</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token variable\">$params</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n\t        <span class=\"token single-quoted-string string\">'index'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token single-quoted-string string\">'yourindexname'</span><span class=\"token punctuation\">,</span>\n\t        <span class=\"token single-quoted-string string\">'body'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>\n\t            <span class=\"token single-quoted-string string\">'size'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">0</span>\n\t        <span class=\"token punctuation\">]</span>\n\t    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\n\t    <span class=\"token variable\">$elasticsearch</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Elasticsearch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">elasticsearchClient</span><span class=\"token punctuation\">;</span>\n\t    <span class=\"token variable\">$esResult</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$elasticsearch</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$params</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$esResult</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>Then, add route name in <code class=\"language-text\">routes/web.php</code>. </p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$router</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'/elasticsearch'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'ElasticsearchController@index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You can see the result when you hit <code class=\"language-text\">localhost:8080/elasticsearch</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"took\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"timed_out\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"_shards\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"total\"</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"successful\"</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"skipped\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"failed\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"hits\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"total\"</span><span class=\"token operator\">:</span> <span class=\"token number\">8375076</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"max_score\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"hits\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Installing elasticsearch client in lumen","date":"July 23, 2020","description":"We will install elastichsearch in lumen, create the builder and use it"}}},"pageContext":{"slug":"/installing-elasticsearch-client-in-lumen/","previous":{"fields":{"slug":"/null-and-0-javascript/"},"frontmatter":{"title":"null and 0 Javascript"}},"next":{"fields":{"slug":"/if-username-loose-sudo-group/"},"frontmatter":{"title":"If username loose sudo group"}}}}}